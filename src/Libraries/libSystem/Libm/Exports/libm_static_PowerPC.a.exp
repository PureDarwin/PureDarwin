
#.o names are from the ppc build, and probably don't map properly to other archs

#libm.a(complex.o):
_cabsf
_cabsl$LDBL128
_cacos
_cacosf
_cacosh
_cacoshf
_cacoshl$LDBL128
_cacosl$LDBL128
_carg
_cargf
_cargl$LDBL128
_casin
_casinf
_casinh
_casinhf
_casinhl$LDBL128
_casinl$LDBL128
_catan
_catanf
_catanh
_catanhf
_catanhl$LDBL128
_catanl$LDBL128
_ccos
_ccosf
_ccosh
_ccoshf
_ccoshl$LDBL128
_ccosl$LDBL128
_cexp
_cexpf
_cexpl$LDBL128
_cimag
_cimagf
_cimagl$LDBL128
_clog
_clogf
_clogl$LDBL128
_conj
_conjf
_conjl$LDBL128
_cpow
_cpowf
_cpowl$LDBL128
_cproj
_cprojf
_cprojl$LDBL128
_creal
_crealf
_creall$LDBL128
_csin
_csinf
_csinh
_csinhf
_csinhl$LDBL128
_csinl$LDBL128
_csqrt
_csqrtf
_csqrtl$LDBL128
_ctan
_ctanf
_ctanh
_ctanhf
_ctanhl$LDBL128
_ctanl$LDBL128

#libm.a(complexld64.o):
_cabsl
_cabsl$LDBL64
_cacoshl
_cacoshl$LDBL64
_cacosl
_cacosl$LDBL64
_cargl
_cargl$LDBL64
_casinhl
_casinhl$LDBL64
_casinl
_casinl$LDBL64
_catanhl
_catanhl$LDBL64
_catanl
_catanl$LDBL64
_ccoshl
_ccoshl$LDBL64
_ccosl
_ccosl$LDBL64
_cexpl
_cexpl$LDBL64
_cimagl
_cimagl$LDBL64
_clogl
_clogl$LDBL64
_conjl
_conjl$LDBL64
_cpowl
_cpowl$LDBL64
_cprojl
_cprojl$LDBL64
_creall
_creall$LDBL64
_csinhl
_csinhl$LDBL64
_csinl
_csinl$LDBL64
_csqrtl
_csqrtl$LDBL64
_ctanhl
_ctanhl$LDBL64
_ctanl
_ctanl$LDBL64

#libm.a(floating.o):
_acosf
_acoshf
_asinf
_asinhf
_atan2f
_atanf
_atanhf
_cbrtf
_cosf
_coshf
_erfcf
_erff
_exp2f
_expf
_expm1f
_hypotf
_lgammaf
_log10f
_log1pf
_log2f
_logf
_powf
_sinf
_sinhf
_sqrtf
_tanf
_tanhf
_tgammaf

#libm.a(FastSinCos.o):
_cos
_sin

#libm.a(arctg.o):
_atan
_atanCore
_atanCoreInv

#libm.a(ashachath.o):
_acosh
_asinh
_atanh

#libm.a(asinacos.o):
_acos
_asin

#libm.a(atan2.o):
_atan2

#libm.a(ceilfloor.o):
_ceil
_ceilf
_floor
_floorf

#libm.a(copysign.o):
_copysign
_copysignf

#libm.a(erfcerf.o):
_erf
_erfc

#libm.a(fabs.o):
_fabs
_fabsf

#libm.a(fenv.o):
___fegetfltrounds
_fegetexceptflag
_fesetexceptflag

#libm.a(fpmacros.o):
___fpclassify
___fpclassifyd
___fpclassifyf
___inff
___isfinite
___isfinited
___isfinitef
___isinf
___isinfd
___isinff
___isinfl
___isnan
___isnand
___isnanf
___isnormal
___isnormald
___isnormalf
___issupernormal
___math_errhandling
___nan
___signbit
___signbitd
___signbitf
___signbitl

#libm.a(frexpldexp.o):
_frexp
_frexpf
_ldexp
_ldexpf

#libm.a(gamma.o):
_tgamma

#libm.a(hypot.o):
_hypot

#libm.a(lgamma.o):
_lgamma
_lgamma_r

#libm.a(logb.o):
_ilogb
_ilogbf
_logb
_logbf

#libm.a(minmaxdim.o):
_fdimf
_fma
_fmaf
_fmaxf
_fminf

#libm.a(nextafter.o):
_nextafter

#libm.a(power.o):
_pow

#libm.a(remmod.o):
_fmod
_fmodf
_remainder
_remainderf
_remquof

#libm.a(rndint.o):
_llrint
_llrintf
_llround
_llroundf
_lrint
_lrintf
_lround
_lroundf
_modf
_nearbyint
_nearbyintf
_rint
_rintf
_round
_roundf
_trunc
_truncf

#libm.a(scalb.o):
_scalb$UNIX2003
_scalbln
_scalblnf
_scalbn
_scalbnf

#libm.a(shchth.o):
_cosh
_sinh
_tanh

#libm.a(sqrt.o):
___sqrt
_sqrt

#libm.a(tableExpD.o):
_exp
_expm1

#libm.a(tableLogD.o):
_log
_log10
_log1p

#libm.a(tg.o):
_tan

#libm.a(finite.o):
_finite

#libm.a(gamma9.o):
#_signgam
_gamma
_gamma_r

#libm.a(matherr.o):
_matherr

#libm.a(rndtol.o):
_rinttol
_roundtol

#libm.a(significand.o):
_significand

#libm.a(w_cabs.o):
_cabs

#libm.a(w_drem.o):
_drem

#libm.a(w_scalb.o):
_scalb

#libm.a(e_j0.o):
_j0
_y0

#libm.a(e_j1.o):
_j1
_y1

#libm.a(e_jn.o):
_jn
_yn

#libm.a(sqrt970.o):
#_hw_sqrt -- removed because you can't export hidden symbols

#libm.a(ld64.o):
_acoshl
_acoshl$LDBL64
_acosl
_acosl$LDBL64
_asinhl
_asinhl$LDBL64
_asinl
_asinl$LDBL64
_atan2l
_atan2l$LDBL64
_atanhl
_atanhl$LDBL64
_atanl
_atanl$LDBL64
_cbrtl
_cbrtl$LDBL64
_ceill
_ceill$LDBL64
_copysignl
_copysignl$LDBL64
_coshl
_coshl$LDBL64
_cosl
_cosl$LDBL64
_erfcl
_erfcl$LDBL64
_erfl
_erfl$LDBL64
_exp2l
_exp2l$LDBL64
_expl
_expl$LDBL64
_expm1l
_expm1l$LDBL64
_fabsl
_fabsl$LDBL64
_fdiml
_fdiml$LDBL64
_floorl
_floorl$LDBL64
_fmal
_fmal$LDBL64
_fmaxl
_fmaxl$LDBL64
_fminl
_fminl$LDBL64
_fmodl
_fmodl$LDBL64
_frexpl
_frexpl$LDBL64
_hypotl
_hypotl$LDBL64
_ilogbl
_ilogbl$LDBL64
_ldexpl
_ldexpl$LDBL64
_lgammal
_lgammal$LDBL64
_llrintl
_llrintl$LDBL64
_llroundl
_llroundl$LDBL64
_log10l
_log10l$LDBL64
_log1pl
_log1pl$LDBL64
_log2l
_log2l$LDBL64
_logbl
_logbl$LDBL64
_logl
_logl$LDBL64
_lrintl
_lrintl$LDBL64
_lroundl
_lroundl$LDBL64
_modfl
_modfl$LDBL64
_nearbyintl
_nearbyintl$LDBL64
_nextafterl
_nextafterl$LDBL64
_nexttoward
_nexttoward$LDBL64
_nexttowardf
_nexttowardf$LDBL64
_nexttowardl
_nexttowardl$LDBL64
_powl
_powl$LDBL64
_remainderl
_remainderl$LDBL64
_remquol
_remquol$LDBL64
_rintl
_rintl$LDBL64
_roundl
_roundl$LDBL64
_scalblnl
_scalblnl$LDBL64
_scalbnl
_scalbnl$LDBL64
_sinhl
_sinhl$LDBL64
_sinl
_sinl$LDBL64
_sqrtl
_sqrtl$LDBL64
_tanhl
_tanhl$LDBL64
_tanl
_tanl$LDBL64
_tgammal
_tgammal$LDBL64
_truncl
_truncl$LDBL64

#libm.a(ArcHyperbolicDD.o):
_acoshl$LDBL128
_asinhl$LDBL128
_atanhl$LDBL128

#libm.a(ArcSinCosDD.o):
_acosl$LDBL128
_asinl$LDBL128

#libm.a(ArcTanDD.o):
_atan2l$LDBL128
_atanl$LDBL128

#libm.a(AuxiliaryDD.o):
_ceill$LDBL128
_copysignl$LDBL128
_fabsl$LDBL128
_fdiml$LDBL128
_floorl$LDBL128
_fmal$LDBL128
_fmaxl$LDBL128
_fminl$LDBL128
_fmodl$LDBL128
_frexpl$LDBL128
_hypotl$LDBL128
_ilogbl$LDBL128
_ldexpl$LDBL128
_llrintl$LDBL128
_llroundl$LDBL128
_logbl$LDBL128
_lrintl$LDBL128
_lroundl$LDBL128
_modfl$LDBL128
_nearbyintl$LDBL128
_nextafterl$LDBL128
_nexttoward$LDBL128
_nexttowardf$LDBL128
_nexttowardl$LDBL128
_remainderl$LDBL128
_remquol$LDBL128
_rintl$LDBL128
_roundl$LDBL128
_scalblnl$LDBL128
_scalbnl$LDBL128
_truncl$LDBL128
#rinttoll is not C99, but is preserved in ppc/ppc64 for legacy reasons
_rinttoll

#libm.a(ErfDD.o):
_erfcl$LDBL128
_erfl$LDBL128

#libm.a(ExpDD.o):
__ExpInnerLD
_exp2l$LDBL128
_expl$LDBL128
_expm1l$LDBL128

#libm.a(GammaDD.o):
_lgammal$LDBL128
_tgammal$LDBL128

#libm.a(HyperbolicDD.o):
_coshl$LDBL128
_sinhl$LDBL128
_tanhl$LDBL128

#libm.a(LogDD.o):
__LogInnerLD
_log10l$LDBL128
_log1pl$LDBL128
_log2l$LDBL128
_logl$LDBL128

#libm.a(PowerDD.o):
_powl$LDBL128

#libm.a(SinCosTanDD.o):
_cosl$LDBL128
_sinl$LDBL128
_tanl$LDBL128

#libm.a(SqrtDD.o):
___sqrtldextra
_cbrtl$LDBL128
_sqrtl$LDBL128

#libm.a(d3ops.o):
__d3add
__d3div
__d3mul

#libm.a(nanl.o):
_nanl$LDBL128

#libm.a(nanl64.o):
_nanl
_nanl$LDBL64

#libm.a(s_cbrt.o):
_cbrt

#missing:
#clog10     <rdar://problem/4164481>

#add also libmCommon symbols
___inf
_exp2
_fdim
_feclearexcept
_fegetenv
_fegetexcept
_fegetround
_feholdexcept
_feraiseexcept
_fesetenv
_fesetexcept
_fesetround
_fetestexcept
_feupdateenv
_fmax
_fmin
_log2
_modff
_nan
_nanf
_nextafterd
_nextafterf
_remquo

___Libm_version
_signgam
