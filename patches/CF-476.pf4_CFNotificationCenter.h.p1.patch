diff -ruN CF-476.17/CFNotificationCenter.h CF-476.17.basic.patched/CFNotificationCenter.h
--- CF-476.17/CFNotificationCenter.h	1970-01-01 01:00:00.000000000 +0100
+++ CF-476.17.basic.patched/CFNotificationCenter.h	2009-02-21 16:01:17.000000000 +0000
@@ -0,0 +1,75 @@
+/*	CFNotificationCenter.h
+	Copyright (c) 1998-2007, Apple Inc. All rights reserved.
+*/
+
+#if !defined(__COREFOUNDATION_CFNOTIFICATIONCENTER__)
+#define __COREFOUNDATION_CFNOTIFICATIONCENTER__ 1
+
+#include <CoreFoundation/CFBase.h>
+#include <CoreFoundation/CFDictionary.h>
+
+CF_EXTERN_C_BEGIN
+
+typedef struct __CFNotificationCenter * CFNotificationCenterRef;
+
+typedef void (*CFNotificationCallback)(CFNotificationCenterRef center, void *observer, CFStringRef name, const void *object, CFDictionaryRef userInfo);
+
+enum {
+    CFNotificationSuspensionBehaviorDrop = 1,
+        // The server will not queue any notifications with this name and object while the process/app is in the background.
+    CFNotificationSuspensionBehaviorCoalesce = 2,
+        // The server will only queue the last notification of the specified name and object; earlier notifications are dropped. 
+    CFNotificationSuspensionBehaviorHold = 3,
+        // The server will hold all matching notifications until the queue has been filled (queue size determined by the server) at which point the server may flush queued notifications.
+    CFNotificationSuspensionBehaviorDeliverImmediately = 4
+        // The server will deliver notifications matching this registration whether or not the process is in the background.  When a notification with this suspension behavior is matched, it has the effect of first flushing any queued notifications.
+};
+typedef CFIndex CFNotificationSuspensionBehavior;
+
+CF_EXPORT CFTypeID CFNotificationCenterGetTypeID(void);
+
+CF_EXPORT CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void) AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;
+
+CF_EXPORT CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void);
+
+CF_EXPORT CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void) AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;
+// The Darwin Notify Center is based on the <notify.h> API.
+// For this center, there are limitations in the API. There are no notification "objects",
+// "userInfo" cannot be passed in the notification, and there are no suspension behaviors
+// (always "deliver immediately"). Other limitations in the <notify.h> API as described in
+// that header will also apply.
+// - In the CFNotificationCallback, the 'object' and 'userInfo' parameters must be ignored.
+// - CFNotificationCenterAddObserver(): the 'object' and 'suspensionBehavior' arguments are ignored.
+// - CFNotificationCenterAddObserver(): the 'name' argument may not be NULL (for this center).
+// - CFNotificationCenterRemoveObserver(): the 'object' argument is ignored.
+// - CFNotificationCenterPostNotification(): the 'object', 'userInfo', and 'deliverImmediately' arguments are ignored.
+// - CFNotificationCenterPostNotificationWithOptions(): the 'object', 'userInfo', and 'options' arguments are ignored.
+// The Darwin Notify Center has no notion of per-user sessions, all notifications are system-wide.
+// As with distributed notifications, the main thread's run loop must be running in one of the
+// common modes (usually kCFRunLoopDefaultMode) for Darwin-style notifications to be delivered.
+// NOTE: NULL or 0 should be passed for all ignored arguments to ensure future compatibility.
+
+
+CF_EXPORT void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior);
+
+CF_EXPORT void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFStringRef name, const void *object);
+CF_EXPORT void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer);
+
+CF_EXPORT void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFStringRef name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately);
+
+#if MAC_OS_X_VERSION_10_3 <= MAC_OS_X_VERSION_MAX_ALLOWED
+
+enum {
+    kCFNotificationDeliverImmediately = (1 << 0),
+    kCFNotificationPostToAllSessions = (1 << 1)
+};
+
+void CFNotificationCenterPostNotificationWithOptions(CFNotificationCenterRef center, CFStringRef name, const void *object, CFDictionaryRef userInfo, CFOptionFlags options) AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;
+
+#endif
+
+
+CF_EXTERN_C_END
+
+#endif /* ! __COREFOUNDATION_CFNOTIFICATIONCENTER__ */
+
